<expt exp1>
/ blocks = [1 = experiment]
</expt>

<block experiment>
/ ontrialbegin = [
	// implement spline algorithm: https://en.wikipedia.org/w/index.php?title=Spline_%28mathematics%29&oldid=288288033#Algorithm_for_computing_natural_cubic_splines
	// y values
	values.i = 0;
	while (list.a.itemcount < 3){
		values.i += 1;
		if (values.i==1){
			values.index = values.index2 - 15;
			list.values.nextindex;
			list.a.appenditem(list.values.currentvalue);
		} else if (values.i==2){
			list.a.appenditem(values.x2);
		} else if (values.i==3){
			values.index = values.index2 + 15;
			list.values.nextindex;
			list.a.appenditem(list.values.currentvalue);
		}
	};
	//set x_i+1 - x_i
	values.i = 0;
	while (list.h.itemcount < 2){
		values.i += 1;
		if (values.i==1){
			values.index = values.index2 - 15;
			list.values.nextindex;
			list.h.appenditem(values.index2 - values.index);
		} else if (values.i==2){
			values.index = values.index2 + 15;
			list.values.nextindex;
			list.h.appenditem(values.index2 - values.index);
		}
	};
	// set alpha = (3/h_i)*(a_(i+1) - a_i)) - (3/h_(i-1))*(a_i - a_(i-1))
	values.alpha = ((3/list.h.item(2))*(list.a.item(3)-list.a.item(2)) - (3/list.h.item(1)*(list.a.item(2)-list.a.item(1))));
	
	list.l.appenditem(1);
	list.mu.appenditem(0);
	list.z.appenditem(0);
	values.i = 1; // to generalize would need a while loop here for i = 1..(n - 1), but n = 2 splines, so (n - 1) = 1
	list.l.appenditem(2*((values.index2 + 15) - (values.index2 - 15)) - list.h.item(values.i)*list.mu.item(values.i));
	list.mu.appenditem = (list.h.item(values.i)/list.l.item(1));
	list.z.appenditem = ((values.alpha - list.h.item(values.i)*list.z.item(values.i))/list.l.item(values.i));
	list.l.appenditem(1);
	list.z.appenditem(1);
	list.c.appenditem(1);
	
	values.j = 1;
	while (values.j > 0){
		list.c.appenditem(list.z.item(values.j) - list.mu.item(values.j)*list.c.item(values.j));
		list.b.appenditem(((list.a.item(values.j + 1) - list.a.item(values.j))/list.h.item(values.j)) - (list.h.item(values.j)*(list.c.item(values.j + 1) + 2*list.c.item(values.j)))/3);
		list.d.appenditem((list.c.item(values.j + 1) - list.c.item(values.j))/(3*list.h.item(values.j)));
		values.j -= 1;
	};
	
	
	values.j = 0;
	while (values.j < 31){
		values.j += 1;
		list.spline1.appenditem(list.a.item(1) + list.b.item(1)*(list.)
]
/ trials = [
	1 = plotvalues;
]
</block>

<trial plotvalues>
/ stimulusframes = [1=test,values_text;]
/ validresponse = (" ")


</trial>

<text test>
/ items = ("<%list.d.items.1%>")
/ size = (50%,50%)
</text>


<text values_text>
/ items = ("<%list.values.items.1%>,<%list.values.items.2%>,<%list.values.items.3%>,<%list.values.items.4%>,<%list.values.items.5%>,<%list.values.items.6%>,<%list.values.items.7%>,<%list.values.items.8%>,<%list.values.items.9%>,<%list.values.items.10%>,<%list.values.items.11%>,<%list.values.items.12%>,<%list.values.items.13%>,<%list.values.items.14%>,<%list.values.items.15%>,<%list.values.items.16%>,<%list.values.items.17%>,<%list.values.items.18%>,<%list.values.items.19%>,<%list.values.items.20%>,<%list.values.items.21%>,<%list.values.items.22%>,<%list.values.items.23%>,<%list.values.items.24%>,<%list.values.items.25%>,<%list.values.items.26%>,<%list.values.items.27%>,<%list.values.items.28%>,<%list.values.items.29%>,<%list.values.items.30%>,<%list.values.items.31%>,<%list.values.items.32%>,<%list.values.items.33%>,<%list.values.items.34%>,<%list.values.items.35%>,<%list.values.items.36%>,<%list.values.items.37%>,<%list.values.items.38%>,<%list.values.items.39%>,<%list.values.items.40%>,<%list.values.items.41%>,<%list.values.items.42%>,<%list.values.items.43%>,<%list.values.items.44%>,<%list.values.items.45%>,<%list.values.items.46%>,<%list.values.items.47%>,<%list.values.items.48%>,<%list.values.items.49%>,<%list.values.items.50%>,<%list.values.items.51%>,<%list.values.items.52%>,<%list.values.items.53%>,<%list.values.items.54%>,<%list.values.items.55%>,<%list.values.items.56%>,<%list.values.items.57%>,<%list.values.items.58%>,<%list.values.items.59%>,<%list.values.items.60%>")
</text>

<values>
/ x2 = 50;
/ index = NULL;
/ index2 = 30; // index to replace values with spline through x2
/ i = NULL;
/ j = NULL;
/ a_index = NULL;
/ h_index = NULL;
/ alpha = NULL;
</values>

<list spline1>
</list>

<list values>
/ items = (10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10)
/ selectionrate = always
/ selectionmode = values.index;
</list>

<list index>
/ items = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60)
/ selectionrate = always
/ selectionmode = values.index2;
</list>

<list a>
/ selectionrate = always
/ selectionmode = values.a_index;
</list>

<list b>
</list>

<list d>
</list>

<list h>
/ selectionrate = always
/ selectionmode = values.h_index;
</list>

<list c>
</list>

<list l>
</list>

<list mu>
</list>

<list z>
</list>